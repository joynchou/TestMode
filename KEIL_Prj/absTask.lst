C51 COMPILER V8.05a   ABSTASK                                                              07/17/2017 21:31:22 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE ABSTASK
OBJECT MODULE PLACED IN .\absTask.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SOFTWARE\ABS_TASK\absTask.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\a
                    -bsTask.lst) TABS(2) OBJECT(.\absTask.obj)

line level    source

   1          #include "../TASK/TASK.h"
   2          #include <rtx51tny.h>                 /* RTX-51 tiny functions & defines      */
   3          #include <stdio.h>
   4          #include <stdlib.h>
   5          #include "../TASK/setup.h"
   6          #include "../../HARDWARE/DEVICES/BUTTON/BUTTON.H"
   7          #include "../../HARDWARE/DEVICES/LED/LED.H"
   8          #include "../../HARDWARE/BSP/USART1.H"
   9          #include "../HARDWARE/DEVICES/SENSOR/ANGLE/ANGLE.h"
  10          #include "../COMMON_SOFTWARE/DATA_SCOPE/DataScope_DP.h"
  11          #include "../COMMON_SOFTWARE/STORAGE/STORAGE.h"
*** WARNING C322 IN LINE 54 OF ../HARDWARE/BSP/STC15_EEPROM.h: unknown identifier
*** WARNING C322 IN LINE 54 OF ../HARDWARE/BSP/STC15_EEPROM.h: unknown identifier
  12          
  13          void taskStart() _task_ 0
  14          { 
  15   1        setup();
  16   1        blink(4);
  17   1          os_create_task (1);
  18   1        //  os_create_task (2);
  19   1        os_create_task(3);
  20   1        os_create_task(5);
  21   1        //  os_create_task (6);
  22   1        os_create_task(7);
  23   1        os_create_task(8);
  24   1        os_create_task(9);
  25   1        os_delete_task(0);
  26   1      }
  27          void task1(void) _task_ 1
  28          {
  29   1        u8 i=0;
  30   1        for (;;)
  31   1        {
  32   2      
  33   2          os_wait(K_IVL, 40, 0);
  34   2      
  35   2        }
  36   1      }
  37          void task2(void) _task_ 2
  38          {
  39   1        static unsigned int count = 0;
  40   1        unsigned int test[20];
  41   1      
  42   1      
  43   1      
  44   1      
  45   1      }
*** WARNING C280 IN LINE 39 OF ..\SOFTWARE\ABS_TASK\ABSTASK.C: 'count': unreferenced local variable
*** WARNING C280 IN LINE 40 OF ..\SOFTWARE\ABS_TASK\ABSTASK.C: 'test': unreferenced local variable
  46          void task3(void) _task_ 3
  47          {
  48   1        unsigned int string[50];
  49   1        static unsigned int count = 0;
  50   1        u8 i=10;
C51 COMPILER V8.05a   ABSTASK                                                              07/17/2017 21:31:22 PAGE 2   

  51   1        for (;;)
  52   1        {   i++;
  53   2      
  54   2           os_wait(K_IVL, 200, 0);
  55   2      
  56   2        }
  57   1      
  58   1      }
*** WARNING C280 IN LINE 48 OF ..\SOFTWARE\ABS_TASK\ABSTASK.C: 'string': unreferenced local variable
*** WARNING C280 IN LINE 49 OF ..\SOFTWARE\ABS_TASK\ABSTASK.C: 'count': unreferenced local variable
  59          void task5(void) _task_ 5
  60          {
  61   1        unsigned long count = 0;
  62   1        for (;;)
  63   1        {
  64   2      
  65   2          buttonScan();
  66   2          os_wait(K_IVL, 2, 0);
  67   2        }
  68   1      }
  69          
  70          void task7(void) _task_ 7
  71          {
  72   1        for (;;)
  73   1        {
  74   2          if (getButtonState(BUTTON1_GPIO_PIN))
  75   2          {
  76   3            open_Board_LED();
  77   3          }
  78   2        
  79   2          os_wait(K_IVL, 10, 0);
  80   2        }
  81   1      }
  82          void task8(void) _task_ 8
  83          {
  84   1        for (;;)
  85   1        {
  86   2          if (getAngle(1) > 50)
  87   2          {
  88   3            open_Board_LED();
  89   3          }
  90   2          else
  91   2          {
  92   3            close_Board_LED();
  93   3          }
  94   2          os_wait(K_IVL, 1, 0);
  95   2        }
  96   1      }
  97          void task9(void) _task_ 9
  98          {
  99   1        for (;;)
 100   1        {
 101   2          sendScopeData(getAngle(1), 1);
 102   2          os_wait(K_IVL, 40, 0);
 103   2      
 104   2        }
 105   1      
 106   1      }
 107          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V8.05a   ABSTASK                                                              07/17/2017 21:31:22 PAGE 3   

   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4     146
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
