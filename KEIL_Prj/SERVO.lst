C51 COMPILER V8.05a   SERVO                                                                07/19/2017 16:29:33 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE SERVO
OBJECT MODULE PLACED IN .\SERVO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\DEVICES\MOTOR\SERVO\SERVO.C LARGE BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\SERVO.lst) TABS(2) OBJECT(.\SERVO.obj)

line level    source

   1          #include "SERVO.h"
   2          #include "../../../BSP/STC15_PWM.H"
   3          #include "../../../BSP/GPIO.H"
   4          
   5          /**********************************
   6          * 文件名称：舵机控制
   7          * 作者：夏志强
   8          * 版本：1.0
   9          * 日期：2017/07/08
  10          * 描述：
  11          * 1.0：编写了舵机的主要控制函数，包括：舵机开关控制、舵机角度读取与设定
  12          ************************************/
  13          
  14          typedef struct
  15          {
  16            float Set_angle;//舵机旋转角度
  17            unsigned char state;//舵机状态
  18            float Pulse_Width_L;//舵机最低脉冲宽度
  19            float Pulse_Width_H;//舵机最高脉冲宽度
  20            float Str_DIV;//舵机时间精度
  21            unsigned int Str_N;//舵机划分
  22            float Current_angle;//当前舵机角度
  23            float Str_MAX_angle;//舵机最大旋转角度
  24            float Str_ACC_angle;//舵机角度精度
  25            unsigned int Str_state;//舵机开关
  26            float Actual_Pulse_Width;//实际脉宽
  27          }StrMotor;
  28          
  29          static StrMotor str_motor[SERVO_NUM]; //需要使用多少个舵机
  30          
  31          
  32          /**********************************************
  33           *函数：Inti_Str_Motor(float,float,float,unsigned int)
  34           *描述：对舵机进行初始化
  35           *输入：
  36           *1.pl为最低可接收的脉冲宽度，单位为ms                  
  37           *2.ph为最高可接收的脉冲宽度，单位为ms                 
  38           *3.n为脉冲分级
  39           *输出：无
  40           *返回值：void
  41           *其他说明：
  42           **********************************************/
  43          void Init_Str_Motor(u8 MOTOR,float pl,float ph,float ma,unsigned int n)
  44          {
  45   1         GPIO_InitTypeDef    GPIO_InitStructure;     //结构定义
  46   1          PWM_InitTypeDef  PWM_InitStructure;
  47   1          GPIO_InitStructure.Mode = GPIO_PullUp;       //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_O
             -D,GPIO_OUT_PP
  48   1          GPIO_InitStructure.Pin  = GPIO_Pin_7 ;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  49   1          GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);  //初始化
  50   1      //      GPIO_InitStructure.Mode = GPIO_PullUp;       //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OU
             -T_OD,GPIO_OUT_PP
  51   1      //    GPIO_InitStructure.Pin  = GPIO_Pin_1 ;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  52   1      //    GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);  //初始化
C51 COMPILER V8.05a   SERVO                                                                07/19/2017 16:29:33 PAGE 2   

  53   1      
  54   1          P37=1;
  55   1      //    P21=1;
  56   1          PWM_UNLOCK;
  57   1          PWM_InitStructure.PWM_GOTO_ADC=DISABLE;
  58   1          PWM_InitStructure.      PWM_V_INIT= PWM_LOW;
  59   1          PWM_InitStructure.      PWM_0ISR_EN=  DISABLE;
  60   1          PWM_InitStructure.      PWM_OUT_EN=ENABLE;
  61   1          PWM_InitStructure.     PWM_UNUSUAL_EN= DISABLE;
  62   1          PWM_InitStructure.     PWM_UNUSUAL_OUT=  DISABLE;
  63   1          PWM_InitStructure.     PWM_UNUSUAL_ISR_EN=DISABLE;
  64   1          PWM_InitStructure.     PWM_UNUSUAL_CMP0_EN=DISABLE;
  65   1          PWM_InitStructure.     PWM_UNUSUAL_P24_EN=DISABLE;
  66   1          PWM_InitStructure.       PWM_CLOCK=PWM_Clock_NT;
  67   1          PWM_InitStructure.       PWM_CLOCK_DIV=15;
  68   1          PWM_InitStructure.       PWM_SELECTx_IO=PWM_SELECT_N;
  69   1          PWM_InitStructure.     PWM_ISRx_EN=  DISABLE;
  70   1          PWM_InitStructure.       PWM_T1x_EN=   DISABLE;
  71   1          PWM_InitStructure.       PWM_T2x_EN=    DISABLE;
  72   1          PWM_InitStructure.       PWM_EN=  DISABLE;
  73   1          PWM_Inilize(MOTOR,&PWM_InitStructure) ;
  74   1      
  75   1          PWM_LOCK;
  76   1          setPWM_DIV(MOTOR,16);
  77   1          set_PWM_period(MOTOR,50);
  78   1          str_motor[MOTOR].Pulse_Width_L = pl;
  79   1          str_motor[MOTOR].Pulse_Width_H = ph;
  80   1          str_motor[MOTOR].Str_MAX_angle = ma;
  81   1          str_motor[MOTOR].Str_N = n;
  82   1          str_motor[MOTOR].Str_DIV = (str_motor[MOTOR].Pulse_Width_H - str_motor[MOTOR].Pulse_Width_L) / str_motor
             -[MOTOR].Str_N;//计算舵机的最小精度，单位为ms
  83   1          str_motor[MOTOR].Str_ACC_angle = str_motor[MOTOR].Str_MAX_angle / (float)str_motor[MOTOR].Str_N;
  84   1          str_motor[MOTOR].Current_angle = 0;
  85   1      }
  86          
  87          /**********************************************
  88           *函数：set_STR_angle(float)
  89           *描述：设定舵机角度
  90           *输入：
  91           *1.angle为设定的角度，浮点型                 
  92           *输出：无
  93           *返回值：void
  94           *其他说明：
  95           **********************************************/
  96          void set_STR_angle(u8 MOTOR,float angle)
  97          {
  98   1          float str_duty;
  99   1          str_motor[MOTOR].Set_angle = angle;
 100   1          str_motor[MOTOR].Actual_Pulse_Width = ( (angle / str_motor[MOTOR].Str_ACC_angle) * str_motor[MOTOR].Str_
             -DIV )+str_motor[MOTOR].Pulse_Width_L ;
 101   1      //  if(str_motor[MOTOR].Actual_Pulse_Width >= str_motor[MOTOR].Pulse_Width_H)
 102   1      //  {
 103   1      //    set_PWM_duty(MOTOR,0.125f);
 104   1      //  }
 105   1      //   else if(str_motor[MOTOR].Actual_Pulse_Width <= str_motor[MOTOR].Pulse_Width_L)
 106   1      //  {
 107   1      //    set_PWM_duty(MOTOR,0.025f);
 108   1      //  }
 109   1      //  else
 110   1        {
 111   2          str_duty =  str_motor[MOTOR].Actual_Pulse_Width  / 20;
 112   2          set_PWM_duty(MOTOR,str_duty);
C51 COMPILER V8.05a   SERVO                                                                07/19/2017 16:29:33 PAGE 3   

 113   2        }
 114   1          str_motor[MOTOR].Current_angle = str_motor[MOTOR].Set_angle;
 115   1      }
 116          
 117          /**********************************************
 118           *函数：read_STR_angle()
 119           *描述：读取舵机角度
 120           *输入：void                
 121           *输出：舵机当前角度
 122           *返回值：float
 123           *其他说明：
 124           **********************************************/
 125          float read_STR_angle(u8 MOTOR)
 126          {
 127   1          return str_motor[MOTOR].Current_angle;
 128   1      }
 129          bit open_STR(u8 MOTOR)
 130          { 
 131   1        open_PWM_N(MOTOR);
 132   1        str_motor[MOTOR].Str_state = ON;
 133   1        return 1;
 134   1      }
 135          bit close_STR(u8 MOTOR)
 136          {
 137   1        close_PWM_N(MOTOR);
 138   1        str_motor[MOTOR].Str_state = OFF;
 139   1        return 1;
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    835    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     74      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
